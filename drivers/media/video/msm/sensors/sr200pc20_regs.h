#ifndef	__SR200PC20_REGS_H__
#define __SR200PC20_REGS_H__

/* PV 1st */

static const u16 sr200pc20_Init_Reg[] = {
	0x0131, /* sleep on */
	0x0133, /* sleep on */
	0x0131, /* sleep on */
	0x082f, /* sleep on */
	0x0a00, /* sleep on */
	
	/* PAGE 20 */
	0x0320, /* page 20 */
	0x101c, /* AE off 50hz */
	
	/* PAGE 22 */
	0x0322, /* page 22 */
	0x1069, /* AWB off */
	
	0x0312,
	0x2000,
	0x2100,
	
	0x0313,
	0x10cb,
	
	/* Initial Start */
	/* PAGE 0 START */
	0x0300,
		0x1011, /* Vsync Active High B:[3], Sub1/2 + Preview 1mode */
	0x1190, 
		0x1204, /* Pclk Falling Edge B:[2] */
	
	0x0baa, /* ESD Check Register */
	0x0caa, /* ESD Check Register */
	0x0daa, /* ESD Check Register */
	
	0x2000,
		0x2102, /* modify 20110929, 0x04 -> 0x02 */
	0x2200,
		0x230a, /* modify 20110929, 0x14 -> 0x0a */
	
	0x2404,
	0x25b0,
	0x2606,
	0x2740,
	
	0x280c,
	0x2904,
	0x2a02,
	0x2b04,
	0x2c06,
	0x2d02,
	
	0x4001, /* Hblank_360 */
	0x4168,
	0x4200,
	0x4394, /* 148 */
	
	0x4409, /* VSCLIP */
	
	0x4504,
	0x4618,
	0x47d8,
	
		/* BLC */
	0x802e,
	0x817e,
	0x8290,
	0x8300,
	0x840c,
	0x8500,
	0x900c, /* BLC_TIME_TH_ON */
	0x910c, /* BLC_TIME_TH_OFF */
	0x92e8, /* BLC_AG_TH_ON */
	0x93e0, /* BLC_AG_TH_OFF */
	0x94ff,
	0x95ff,
	0x96dc,
	0x97fe,
	0x9838,
	
		/* Dark BLC */
	0xa000,
	0xa200,
	0xa400,
	0xa600,
	
		/* Normal BLC */
		0xa843, /* B */
	0xaa43,
	0xac43,
	0xae43,
	
		/* OutDoor BLC */
	0x9943,
	0x9a43,
	0x9b43,
	0x9c43,
	/* PAGE 0 END */
	
	/* PAGE 2 START */
	0x0302,
	0x1203,
	0x1303,
	0x1600,
	0x178C,
	0x184c, /* Double_AG */
	0x1900,
		0x1a39, /* Double_AG 38 -> 39 */
	0x1c09,
	0x1d40,
	0x1e30,
	0x1f10,
	
	0x2077,
	0x21de,
	0x22a7,
	0x2330, /* CLAMP */
	0x273c,
	0x2b80,
	0x2e00,
	0x2f00,
	0x3005, /* For Hi-253 never no change 0x05 */
	
	0x5020,
		0x511c, /* add 20110826 */
		0x5201, /* 0x03 -> 0x01 */
		0x53c1, /* add 20110818 */
	0x54c0,
	0x551c,
	0x5611,
		0x5822, /*add 20120430 */
		0x5920, /*add 20120430 */
	0x5da2,
	0x5e5a,
	
	0x6087,
	0x6199,
	0x6288,
	0x6397,
	0x6488,
	0x6597,
	
	0x670c,
	0x680c,
	0x690c,
	
	0x7289,
	0x7396,
	0x7489,
	0x7596,
	0x7689,
	0x7796,
	
	0x7c85,
	0x7daf,
	0x8001,
	0x817f,
	0x8213,
	0x8324,
	0x847d,
	0x8581,
	0x867d,
	0x8781,
	
	0x9248,
	0x9354,
	0x947d,
	0x9581,
	0x967d,
	0x9781,
	
	0xa002,
	0xa17b,
	0xa202,
	0xa37b,
	0xa47b,
	0xa502,
	0xa67b,
	0xa702,
	
	0xa885,
	0xa98c,
	0xaa85,
	0xab8c,
	0xac10,
	0xad16,
	0xae10,
	0xaf16,
	
	0xb099,
	0xb1a3,
	0xb2a4,
	0xb3ae,
	0xb49b,
	0xb5a2,
	0xb6a6,
	0xb7ac,
	0xb89b,
	0xb99f,
	0xbaa6,
	0xbbaa,
	0xbc9b,
	0xbd9f,
	0xbea6,
	0xbfaa,
	
	0xc42c,
	0xc543,
	0xc663,
	0xc779,
	
	0xc82d,
	0xc942,
	0xca2d,
	0xcb42,
	0xcc64,
	0xcd78,
	0xce64,
	0xcf78,
	0xd00a,
	0xd109,
		0xd40c, /*DCDC_TIME_TH_ON*/
		0xd50c, /*DCDC_TIME_TH_OFF */
	0xd6e8, /* DCDC_AG_TH_ON */
	0xd7e0, /* DCDC_AG_TH_OFF */
	0xe0c4,
	0xe1c4,
	0xe2c4,
	0xe3c4,
	0xe400,
	0xe880,
	0xe940,
	0xea7f,
	
	0xf001,
	0xf101,
	0xf201,
	0xf301,
	0xf401,
	/* PAGE 2 END */
	
	/* PAGE 3 */
	0x0303,
	0x1010,
	/* PAGE 3 END */
	
	/* PAGE 10 START */
	0x0310,
		0x1001, /* 00: CrYCbY, 01: CbYCrY */
	0x1230,
	0x2000,
	0x3000,
	0x3100,
	0x3200,
	0x3300,
	
	0x3430,
	0x3500,
	0x3600,
	0x3800,
	0x3e58,
	
	0x4080,
	0x4100,
	
	0x6061,
	0x617a, /* 77 */
	0x6274, /* 77 */
	0x6350, /* Double_AG 50->30 */
	0x6480,
	
	0x6642,
	0x6722,
	
	0x6a8a, /* 8a */
	0x6b74, /* 74 */
	0x6c7e, /* 7e */
	0x6d8e, /* 8e */
	0x7601, /* ADD 20120522 */
	0x7904, /* ADD 20120522 */
	
	/* PAGE 11 START */
	0x0311,
	0x107f,
	0x1140,
	0x120a, /* Blue Max-Filter Delete */
	0x13b9,
	
	0x2668, /* Double_AG 31->20 */
	0x2762, /* Double_AG 34->22 */
	0x280f,
	0x2910,
	0x2b30,
	0x2c32,
	
	/*Out2 D-LPF th*/
	0x3070,
	0x3110,
	0x3265,
	0x3309,
	0x3406,
	0x3504,
	
	/*Out1 D-LPF th*/
	0x3670,
	0x3718,
	0x3865,
	0x3909,
	0x3a06,
	0x3b04,
	
	/*Indoor D-LPF th*/
	0x3c80,
	0x3d18,
	0x3e80,
	0x3f0c,
	0x4009,
	0x4106,
	
	/*Dark1 D-LPF th*/
	0x4280,
	0x4318,
	0x4480,
	0x450d,
	0x460a,
	0x4708,
	
	/*Dark2 D-LPF th*/
	0x4888,
	0x492c,
	0x4a80,
	0x4b0f,
	0x4c0c,
	0x4d0b,
	
	/*Dark3 D-LPF th*/
	0x4e80,
	0x4f23,
	0x5080,
	0x510f,
	0x520c,
	0x530c,
	
	0x5411,
	0x5517,
	0x5620,
	0x5701,
	0x5800,
	0x5900,
	
	0x5a18,
	0x5b00,
	0x5c00,
	
	0x603f,
	0x6250,
	0x7006,
	/* PAGE 11 END */
	
	/* PAGE 12 START */
	0x0312,
	0x2000,
	0x2100,
	
	0x2500, /* 0x30 */
	
	0x2800,
	0x2900,
	0x2a00,
	
	0x3050,
	0x3118,
	0x3232,
	0x3340,
	0x3450,
	0x3570,
	0x36a0,
	
	/*Out2 th*/
	0x40a0,
	0x4140,
	0x42a0,
	0x4388,
	0x4488,
	0x4578,
	
	/*Out1 th*/
	0x46b0,
	0x4755,
	0x48a0,
	0x4990,
	0x4a80,
	0x4b80,
	
	/*Indoor th*/
	0x4cb0,
	0x4d40,
	0x4e88,
	0x4f98,
	0x5060,
	0x5170,
	
	/*Dark1 th*/
	0x52b0,
	0x5350,
	0x5490,
	0x5598,
	0x5670,
	0x5770,
	
	/*Dark2 th*/
	0x58a0,
	0x5940,
	0x5aa0,
	0x5ba0,
	0x5cb0,
	0x5d70,
	
	/*Dark3 th*/
	0x5e9c,
	0x5f40,
	0x60a0,
	0x61a0,
	0x62b0,
	0x6370,
	
	0x7015,
	0x7101, /* Don't Touch register */
	
	0x7218,
	0x7301, /* Don't Touch register */
	
	0x7425,
	0x7515,
	
	0x8020,
	0x8140,
	0x8265,
	0x851a,
	0x8800,
	0x8900,
		0x905d, /* add 20120430 */
	
	/*Dont Touch register*/
	0xD00c,
	0xD180,
	0xD217,
	0xD300,
	0xD400,
	0xd50f,
	0xD6ff,
	0xd7ff,
	/*End*/
	
	0x3b06,
	0x3c06,
	
	/*Dont Touch register*/
	0xc530,/* 55->48 */
	0xc62a,/* 48->40 */
	/* PAGE 12 END */
	
	/* PAGE 13 START */
	
	0x0313,
	0x117b,
	0x1207,
	0x1400,
	
	0x2015,
	0x2113,
	0x2233,
	0x2305,
	0x2409,
	
	0x250a,
	
	0x2618,
	0x2730,
	0x2912,
	0x2a50,
	
	/*Low clip th*/
	0x2b06,
	0x2c06,
	0x2508,
	0x2d0c,
	0x2e12,
	0x2f12,
	
	/*Out2 Edge*/
	0x5010,
	0x5114,
	0x5212,
	0x530c,
	0x540f,
	0x550c,
	
	/*Out1 Edge*/
	0x5610,
	0x5713,
	0x5810,
	0x590c,
	0x5a0f,
	0x5b0c,
	
	/*Indoor Edge*/
	0x5c0b,
	0x5d0c,
	0x5e0b,
	0x5f0a,
	0x600a,
	0x6109,
	
	/*Dark1 Edge*/
	0x6209,
	0x6309,
	0x6409,
	0x6507,
	0x6607,
	0x6707,
	
	/*Dark2 Edge*/
	0x6808,
	0x6908,
	0x6a08,
	0x6b06,
	0x6c06,
	0x6d06,
	
	/*Dark3 Edge*/
	0x6e08,
	0x6f08,
	0x7008,
	0x7106,
	0x7206,
	0x7306,
	
	/*2DY*/
		0x8000, /* For Preview */
	0x811f,
	0x8205,
	0x8331,
	
	0x9005,
	0x9105,
	0x9233,
	0x9330,
	0x9403,
	0x9514,
	0x9720,
	0x9920,
	
	0xa004,
	0xa105,
	0xa204,
	0xa305,
	0xa407,
	0xa508,
	0xa607,
	0xa708,
	0xa807,
	0xa908,
	0xaa07,
	0xab08,
	
	/*Out2*/
	0xb022,
	0xb12a,
	0xb228,
	0xb322,
	0xb42a,
	0xb528,
	
	/*Out1*/
	0xb622,
	0xb72a,
	0xb828,
	0xb922,
	0xba2a,
	0xbb28,
	
	/*Indoor*/
	0xbc25,
	0xbd2a,
	0xbe27,
	0xbf25,
	0xc02a,
	0xc127,
	
	/*Dark1*/
	0xc221,
	0xc325,
	0xc426,
	0xc525,
	0xc628,
	0xc726,
	
	/*Dark2*/
	0xc821,
	0xc925,
	0xca22,
	0xcb21,
	0xcc21,
	0xcd20,
	
	/*Dark3*/
	0xce21,
	0xcf25,
	0xd022,
	0xd121,
	0xd221,
	0xd320,
	/* PAGE 13 END */
	
	/* PAGE 14 START */
	0x0314,
	0x1011,
	
	0x1480, /* GX */
	0x1580, /* GY */
	0x1680, /* RX */
	0x1780, /* RY */
	0x1880, /* BX */
	0x1980, /* BY */
	
	0x2060, /* X */
	0x2180, /* Y */
	
	0x2280,
	0x2380,
	0x2480,
	
	0x30c8,
	0x312b,
	0x3200,
	0x3300,
	0x3490,
	
	0x4034, /* 3e */
	0x5024, /* 28 */
	0x6020, /* 24 */
	0x7024, /* 28 */
	/* PAGE 14 END */
	
	/* PAGE 15 START */
	0x0315,
	0x100f,
	
	/*Rstep H 16*/
	/*Rstep L 14*/
	0x1446, /* CMCOFSGH */
	0x1536, /* CMCOFSGM */
	0x1626, /* CMCOFSGL */
	0x172f, /* CMC SIGN */
	
	/*CMC*/
	0x308f,
	0x3159,
	0x320a,
	0x3315,
	0x345b,
	0x3506,
	0x3607,
	0x3740,
	0x3887,
	
	/*CMC OFS*/
	0x4094,
	0x4120,
	0x4289,
	0x4384,
	0x4403,
	0x4501,
	0x4688,
	0x479c,
	0x4828,
	
	/*CMC POFS*/
	0x5003,
	0x5100,
	0x5283,
	0x5308,
	0x5411,
	0x5599,
	0x5603,
	0x570f,
	0x5892,
	
	0x8000,
	0x8580,
	0x8702,
	0x8800,
	0x8900,
	0x8a00,
	/* PAGE 15 END */
	
	/* PAGE 16 START */
	0x0316,
	0x1031,
	0x185e,/* Double_AG 5e->37 */
	0x195d,/* Double_AG 5e->36 */
	0x1a0e,
	0x1b01,
	0x1cdc,
	0x1dfe,
	
	/*GMA Default*/
	0x3000,
	0x3108,
	0x321c,
	0x3332,
	0x3454,
	0x3570,
	0x3687,
	0x379a,
	0x38aa,
	0x39b9,
	0x3ac5,
	0x3bd2,
	0x3cdb,
	0x3de5,
	0x3eeb,
	0x3ff3,
	0x40f8,
	0x41fd,
	0x42ff,
	
	0x5000,
	0x5103,
	0x5219,
	0x5334,
	0x5458,
	0x5575,
	0x568d,
	0x57a1,
	0x58b2,
	0x59be,
	0x5ac9,
	0x5bd2,
	0x5cdb,
	0x5de3,
	0x5eeb,
	0x5ff0,
	0x60f5,
	0x61f7,
	0x62f8,
	
	0x7000,
	0x710e,
	0x721f,
	0x733f,
	0x745d,
	0x7575,
	0x768a,
	0x779c,
	0x78ad,
	0x79bb,
	0x7ac6,
	0x7bd1,
	0x7cda,
	0x7de3,
	0x7eea,
	0x7ff1,
	0x80f6,
	0x81fb,
	0x82ff,
	/* PAGE 16 END */
	
	/* PAGE 17 START */
	0x0317,
	0x10f7,
	/* PAGE 17 END */
	
	/* PAGE 18 START */
	0x0318,
	0x1007,
	0x1100,
	0x1240,
	0x2005,
	0x2100,
	0x2201,
	0x23e0,
	0x2400,
	0x2508,
	0x2600,
	0x2702,
	0x2805,
	0x2908,
	0x2a01,
	0x2be2,
	0x2c0a,
	0x2d00,
	0x2e0a,
	0x2f00,
	0x3044,
	/* PAGE 18 END */
	
	/* PAGE 20 START */
	0x0320,
	0x111c,
	0x1830,
	0x1a08,
	0x2005,
	0x2130,
	0x2210,
	0x2300,
	0x2400,
	
	0x28e7,
	0x290d, /* 20100305 ad->0d */
	0x2aff,
	0x2bf4,
	
	0x2cc2,
	0x2d5f,
	0x2e33,
	0x30f8,
	0x3203,
	0x332e,
	0x3430,
	0x35d4,
	0x36fe,
	0x3732,
	0x3804,
	0x3922,
	0x3ade,
	0x3b22,
	0x3cde,
	
	0x5045,
	0x5188,
	
	0x5603,
	0x57f7,
	0x5814,
	0x5988,
	0x5a04,
	
	0x6055,
	0x6155,
	0x626A,
	0x63A9,
	0x646A,
	0x65A9,
	0x666B,
	0x67E9,
	0x686B,
	0x69E9,
	0x6a6A,
	0x6bA9,
	0x6c6A,
	0x6dA9,
	0x6e55,
	0x6f55,
	
	0x7071, /* 6c */
	0x7182, /* 82(+8) */
	
	0x7643,
	0x7702,
	0x7824, /* 24 */
	0x7948, /* Y Target 70 => 25, 72 => 26 */
	0x7a23, /* 23 */
	0x7b22, /* 22 */
	0x7d23,
	
		0x8301, /*EXP Normal 33.33 fps */
	0x847c, 
	0x85dc, 
	
		0x8601, /*EXPMin 6500.00 fps*/
	0x87f4,
	
		0x8805, /*EXP Max 8.33 fps */
	0x89f3, 
	0x8a70, 
	
		0x8B7e, /*EXP100 */
	0x8Cf4, 
	
		0x8D69, /*EXP120 */
	0x8E78, 
	
	0x989d,
	0x9945,
	0x9a0d,
	0x9bde,
	
	0x9c17, //EXP Limit 541.67 fps 
	0x9d70, 
	
		0x9e01, /*EXP Unit */
	0x9ff4, 
	
	0xb018,
	0xb114,
	0xb2f0,
	0xb318,
	0xb41c,
	0xb548,
	0xb632,
	0xb72b,
	0xb827,
	0xb925,
	0xba4d,
	0xbb4b,
	0xbc4a,
	0xbd49,
	
	0xc010,
	0xc140,
	0xc240,
	0xc340,
	0xc406,
	
	0xc880,
	0xc980,
	/* PAGE 20 END */
	
	/* PAGE 22 START */
	0x0322,
	0x10fd,
	0x112e,
	0x1901, /* Low On */
	0x2010,
	0x2180,
	0x2401,
	0x257e, /*Add 20120514 light stable */
	
	0x3080,
	0x3180,
	0x3811,
	0x3934,
	0x40f3,
	
	0x4132, /* 33 */
	0x4222, /* 22 */
	0x43f3, /* f6 */
	0x4443, /* 44 */
	0x4533, /* 33 */
	0x4600,
	0x50b2,
	0x5181,
	0x5298,
	
	0x8038,
	0x8120,
	0x823a, /* 3a */
	
	0x8356, /* */
	0x841e, /* */
	0x8552, /* */
	0x8620, /* */
	
	0x8741,
	0x8831,
	0x8939,
	0x8a29,
	
	0x8b3c,
	0x8c38,
	0x8d32,
	0x8e2c,
	
	0x8f5c,
	0x9059,
	0x9155,
	0x924c,
	0x9340,
	0x9439,
	0x9530,
	0x962c,
	0x9723,
	0x9820,
	0x991f,
	0x9a1f,
	
	0x9b77,
	0x9c66,
	0x9d48,
	0x9e38,
	0x9f30,
	
	0xa070,
	0xa154,
	0xa26f,
	0xa3ff,
	
	0xa414, /* 1500fps */
	0xa52c, /* 700fps */
	0xa6cf,
	
	0xad40,
	0xae4a,
	
	0xaf28,  /* low temp Rgain */
	0xb026,  /* low temp Rgain */
	
	0xb100, /* 0x20 -> 0x00 0405 modify */
	0xb4ea,
	0xb891, /* a2: b-2, R+2  b4 B-3, R+4 lowtemp b0 a1 Spec AWB A modify */
	0xb900,
	/* PAGE 22 END */
	
	/* PAGE 48 START*/
	0x0348,
	
	/* PLL Setting */
	0x7005,
	0x7130, /*MiPi Pllx2*/
	0x7285,
	0x70a5, /* PLL Enable*/
	0x0348,
	0x0348,
	0x0348,
	0x0348,
	0x7095,  /* CLK_GEN_ENABLE*/
	
	/* MIPI TX Setting */
	0x1100, /* 20111013 0x10 continuous -> 0x00 not Continuous */
	/*	0x17cc*/
	0x101c,
	0x1200,
		0x1430, /*	0x1470,*/ /* 20111013	0x00 -> 	0x30 Clock Delay */
		0x1604, /* 1016 	0x04->	0x05*/
	
	
	0x1900,
	0x1a32,
	0x1b17,
	0x1c0c,
	0x1d0f,
	0x1e06,
	0x1f05,
	0x2000,
	
	0x2301,
	0x241e,
	0x2500,
	0x2600,
	0x2701,
	0x2800,
	0x2a06,
	0x2b40,
	0x2c04,
	0x2db0,
	
		0x3000, /*64	0x480 MiPi OutPut*/
	0x3105,
	
	/*	0x3040, 80	0x600 MiPi OutPut*/
	/*	0x3106,*/
	
	0x320c,
	0x330a,
		0x3402,/*CLK LP -> HS Prepare time 24MHz:	0x02, 48MHz:	0x03*/
	0x3503,
	0x3601,
	0x3707,
	0x3802,
		0x3902,/*drivability 24MHZ: 0x02, 48MHz:	0x03*/
	/*	0x17c4,*//*MHSHIM*/
	/*	0x17c0,*//*MHSHIM*/
	/*	0x1700,*//*MHSHIM*/
	0x5000,
	/* PAGE 48 END*/
	
	/* PAGE 20 */
	0x0320,
	0x109c, /*AE on 50hz */
	
	/* PAGE 22 */
	0x0322,
	0x10e9,
	
	/* PAGE 0 */
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	
	0x0300,
	
	0x0130,
	
	0xff0a, /* NEED Delay 100ms */	
	
	0x0300, /*Sleep On*/
	0x0131,
	
	0x0320, /*page 20*/
	0x1830, /*for Preview*/
	0x101c, /*AE off 50hz*/
	
	0x0322, /*page 22*/
	0x1069, /*awb off*/
	
	0x0300,
	0x1011,
	
	0x1190,//marc.calandro solve camera preview flip problem
	
	0x2000,
		0x2102, /*modify 20110929	0x04->	0x02*/
	0x2200,
		0x230a, /*modify 20110929	0x14->	0x0a*/
	
	0x4200, /*VBlank*/
	0x4394, /*148*/
	
	/*Page10*/
	0x0310,
	0x6061,
	
	/*Page12*/
	0x0312,
	0x2000,
	0x2100,
	0x905d,
	
	/*only for Preview DPC */
	0xd217,
	0xd50f,
	0xd7ff,
	
	/*Page13*/
	0x0313,
		0x104a, /* Edge Off */
		0x8000, /* For Preview */
	
	/*Page18*/
	0x0318,
	0x1007,
	
	/* PAGE 48 START*/
	0x0348,
	
	/* PLL Setting */
	0x7005,
	0x7130, /*MiPi Pllx2*/
	0x7285,
	0x70a5, /* PLL Enable*/
	0x0348,
	0x0348,
	0x0348,
	0x0348,
	0x7095,  /* CLK_GEN_ENABLE*/
	
	/* MIPI TX Setting */
	0x1100, /* 20111013 0x10 continuous -> 0x00 not Continuous */
	/*	0x17cc,*/ /*MHSHIM*/
	0x101c,
	0x1200,
		0x1430, /*	0x1470,*/ /* 20111013	0x00 -> 	0x30 Clock Delay */
		0x1604, /* 1016 	0x04->	0x05*/
	
	
	0x1900,
	0x1a32,
	0x1b17,
	0x1c0c,
	0x1d0f,
	0x1e06,
	0x1f05,
	0x2000,
	
	0x2301,
	0x241e,
	0x2500,
	0x2600,
	0x2701,
	0x2800,
	0x2a06,
	0x2b40,
	0x2c04,
	0x2db0,
	
		0x3000, /*64	0x480 MiPi OutPut*/
	0x3105,
	
	/*	0x3040, 80	0x600 MiPi OutPut*/
	/*	0x3106,*/
	
	0x320c,
	0x330a,
		0x3402,/*CLK LP -> HS Prepare time 24MHz:	0x02, 48MHz:	0x03*/
	0x3501,
	0x3603,
	0x3707,
	0x3802,
	0x3902,/*drivability 24MHZ:02, 48MHz:03*/
	/*	0x17c4,*//*MHSHIM*/
	/*	0x17c0,*//*MHSHIM*/
	/*	0x1700,*//*MHSHIM*/
	0x5000,
	/* PAGE 48 END*/
	
	0x0320,
		0x109c, /* AE on 50hz */
	
	0x0322,
	0x10e9, /*AWB ON*/
	
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	
	0x0300, /*Sleep Off*/
	0x0130,
	
	0xff28, /*400ms*/ 
		
		
	};
	

const unsigned int sr200pc20_640_Preview[] = {
0x0300,
0x01f1, /*Sleep on*/
0x0330,
0x36A3, /*DMA off*/
0x03c4,
0x106e, /*AE Off*/
0x03c5,
0x1000, /*AWB off*/
0x0300,
0xff01, /*Delay 10ms*/
0x0330,
0x3629, /*Capture Function - Capture*/
0x0300,
0xff01, /*Delay 10ms*/
0x0319, /*Scaler On*/
0x1007,
0x0300,
0x1041, /*Binning + Pre1*/
0x1190, /*Fix Frame Off*/
0x1380,
0x1430,
0x1704, /*CLK 1/1*/
0x0302,
0x2102,
0x0300,
0xff01, /*Delay 10ms  */
0x2000,
0x2100, /*preview row START set*/
0x2200,
0x2300, /*preview col start set*/
0x5200, /*Vblank 33*/
0x5321,
0x0315, /*Shading*/
0x1081,
0x2007, /*Shading Width 2048*/
0x21f8,
0x2202, /*Shading Height 768*/
0x23fc,
0x0348,
0x101C, /*MIPI On*/
0x1604,
0x3000, /*640 * 2*/
0x3105,
0x0320,
0x2403, /*EXP Max 1.00 fps*/
0x2537,
0x26F9,
0x2780,
0x03d5,
0x4189,
0x0330,
0x3628, /*Capture Function - Preview*/
0x0300,
0xff01, /*Delay 10ms  */
0x03c4,
0x10ef, /*AE On*/
0x0300,
0xff01, /*Delay 10ms  */
0x03c5,
0x10b0, /*AWB en*/
0x0300,
0x01f0, /*sleep off*/
0x03cf, /*Adative en*/
0x10af, /*Yoffset, Contrast Off*/
0x03c0,
0x3300,
0x3201, /*DMA On*/
0xff05,
};


static const u16 sr200pc20_VT_Init_Reg[] = {
0x0171,	// reset op.
0x0173,
0x0171,

// PLL Setting
0x0300,

0x080f, //Parallel NO Output_PAD Out
0x1000,	// VDOCTL1
0x1190,	// VDOCTL2 , 90 : FFR off, 94 : FFR on
0x1200,	// CLK_CTL
0x1488,

0xc095,
0xc118,
0xc291,
0xc300,
0xc401,

0x0320, /*page 20*/
0x101c, /*ae off*/
0x0322, /*page 22*/
0x107b, /*awb off*/
0x0300,
0x1200,
0x2000,
0x2104,
0x2200,
0x2304,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

//BLC
0x802e, //don't touch
0x817e, //don't touch
0x8290, //don't touch
0x8330, //don't touch
0x842c, //don't touch
0x854b, //don't touch
0x8601, //don't touch
0x8847, //don't touch
//{0x89, 0x48},//BLC hold

0x9006,//TIME_IN  12/100  _100318
0x9106,//TIME_OUT 12/100  _100318
0x9298,//AG_IN
0x9398,//AG_OUT

0x9838, //don't touch
0x9940, //Out BLC
0xa040, //Dark BLC
0xa842, //Normal BLC 44

//Page2 Last Update 12_01_20
0x0302,
0x1000,
0x1100,
0x1340,
0x1404,
0x181c,
0x1900, //01
0x1a00,
0x1b08,
0x1c9c,
0x1d03,
0x2033,
0x2177,
0x22a7,
0x2332,
0x2433,
0x2b40,
0x2d32,
0x3199,
0x3200,
0x3300,
0x343c,
0x350d,
0x3b60, //80

//timing control 1 // //don't touch
0x5021,
0x511c,
0x52aa,
0x535a,
0x5430,
0x5510,
0x560c,
0x5800,
0x590f,

//timing control 2 // //don't touch
0x6034,
0x613a,
0x6234,
0x6339,
0x6434,
0x6539,
0x7235,
0x7338,
0x7435,
0x7538,
0x8002,
0x812e,
0x820d,
0x8310,
0x840d,
0x8510,
0x921d,
0x9320,
0x941d,
0x9520,
0xa003,
0xa12d,
0xa42d,
0xa503,
0xa812,
0xa91b,
0xaa22,
0xab2b,
0xac10,
0xad0e,
0xb833,
0xb935,
0xbc0c,
0xbd0e,
0xc03a,
0xc13f,
0xc23a,
0xc33f,
0xc43a,
0xc53e,
0xc63a,
0xc73e,
0xc83a,
0xc93e,
0xca3a,
0xcb3e,
0xcc3b,
0xcd3d,
0xce3b,
0xcf3d,
0xd033,
0xd13f,

//Page 10
0x0310,
0x1003, //03, //ISPCTL1, YUV ORDER(FIX)
0x1143,
0x1230, //Y offet, dy offseet enable
0x4080,
0x4102, //00 DYOFS  00->10  _100318
0x4880, //Contrast  88->84  _100318
0x5048, //AGBRT

0x6001, //7f //7c
0x6100, //Use default
0x6278, //SATB_B  (1.4x)
0x6378, //SATR_R  (1.2x) //78
0x6448, //AGSAT
0x6690, //wht_th2
0x6736, //wht_gain  Dark (0.4x), Normal (0.75x)

0x8000,

//Page 11
//LPF
0x0311,
0x1025,	//LPF_CTL1 //0x01
0x1107,	//06
0x2000,	//LPF_AUTO_CTL
0x2160,	//LPF_PGA_TH
0x230a,	//LPF_TIME_TH
0x6013,	//ZARA_SIGMA_TH //40->10
0x6185,
0x6200,	//ZARA_HLVL_CTL
0x6300,	//ZARA_LLVL_CTL
0x6400,	//ZARA_DY_CTL

0x6770,	//Dark //f0
0x6824,	//Middle //04 //34
0x6904,	//High //04

//Page 12
//2D
0x0312,
0x40d3,	//YC2D_LPF_CTL1 //bc
0x4109,	//YC2D_LPF_CTL2
0x5018,	//Test Setting
0x5124,	//Test Setting
0x701f,	//GBGR_CTL1 //0x1f
0x7100,	//Test Setting
0x7200,	//Test Setting
0x7300,	//Test Setting
0x7412,	//GBGR_G_UNIT_TH//12
0x7512,	//GBGR_RB_UNIT_TH//12
0x7620,	//GBGR_EDGE_TH
0x7780,	//GBGR_HLVL_TH
0x7888,	//GBGR_HLVL_COMP
0x7918,	//Test Setting

//////////////////
0x903d,
0x9134,
0x9928,
0x9c05, //14 For defect
0x9d08, //15 For defect
0x9e28,
0x9f28,

0xb07d, //75 White Defect
0xb544,
0xb682,
0xb752,
0xb844,
0xb915,
///////////////////////

//Edge
0x0313,
0x1001,
0x1189,
0x1214,
0x1319,
0x1408,	//Test Setting
0x2003,	//SHARP_Negative
0x2104,	//SHARP_Positive
0x2325,	//SHARP_DY_CTL
0x2421,	//40->33
0x2508,	//SHARP_PGA_TH
0x2640,	//Test Setting
0x2700,	//Test Setting
0x2808,	//Test Setting
0x2950,	//AG_TH
0x2ae0,	//region ratio
0x2b10,	//Test Setting
0x2c28,	//Test Setting
0x2d40,	//Test Setting
0x2e00,	//Test Setting
0x2f00,	//Test Setting
0x3011,	//Test Setting
0x8005,	//SHARP2D_CTL
0x8107,	//Test Setting
0x9004,	//SHARP2D_SLOPE
0x9105,	//SHARP2D_DIFF_CTL
0x9200,	//SHARP2D_HI_CLIP
0x9330,	//SHARP2D_DY_CTL
0x9430,	//Test Setting
0x9510,	//Test Setting

//14page LSC 20120214 oA//////////
0x0314,
0x1001,

0x2244, //69,76, 34, 2b
0x2334, //50,4b, 15, 0d
0x2432, //44,3b, 10, 0b

0x2780, /* RXCEN */
0x2880, //RYCEN
0x2980, /* GXCEN */
0x2a80, //GYCEN
0x2b80, /* BXCEN */
0x2c80, //BYCEN


//15page//////////////////////////
0x0315,
0x1003,

0x1448,	//CMCOFSGM
0x163e,	//CMCOFSGL
0x172d,	//CMC SIGN

//CMC
0x30cb,
0x314b,
0x3200,
0x3323,
0x34ce,
0x352b,
0x3600,
0x3735,
0x3875,


//CMC OFS
0x4000,
0x4100,
0x4200,
0x430e,
0x448b,
0x4583,
0x4600,
0x4700,
0x4800,

0x0316,//gamma   0.44 //S_32
0x3000,
0x3108,//0x0d //0e
0x321c,//(0216_kjh_0x1b-->1c) 0x18 //1a
0x332f,//0x2c //2f
0x3453,
0x3576,
0x3693,
0x37ac,
0x38c0,
0x39d0,
0x3adc,
0x3bed,
0x3cf4, //f7
0x3df6, //fc
0x3efa, //ff

//Page 17 AE
0x0317,
0xc43c,
0xc532,

//Page 20 AE
0x0320,
0x101c,
0x1104,

0x2001,
0x2827,
0x29a1,

0x2a90,
0x2bf5,
0x2c2b, //23->2b 2010_04_06 hhzin

0x30f8,

0x3b22,
0x3cde,

0x3922,
0x3ade,
0x3b22, //23->22 _10_04_06 hhzin
0x3cde,

0x6070, //70
0x6112, //11 //22

0x6270,
0x6320, //11 //22

0x683c,
0x6964,
0x6A28,
0x6Bc8,

0x7034,//Y Targe 32

0x7611, //Unlock bnd1
0x7772, //Unlock bnd2 02->a2 _10_04_06 hhzin

0x7812, //Yth 1
0x7926, //Yth 2 //1f
0x7a23, //Yth 3

0x7c17, //1c->1d _10_04_06 hhzin
0x7d22,

//50Hz
0x8300, //EXP Normal 33.33 fps
0x84af,
0x85c8,

0x8600, //EXPMin 7500.00 fps
0x87c8,

0xa001, //EXP Max 16.67 fps
0xa15f,
0xa290,

0x8B3a, //EXP100
0x8C98,
0x8D30, //EXP120
0x8Ed4,

0x9101, //EXP Fix 15.00 fps
0x9286,
0x93a0,

0x988C, //Outdoor th1
0x9923, //Outdoor th2

0x9c07, //EXP Limit 833.33 fps
0x9d08,
0x9e00, //EXP Unit
0x9fc8,

0xb01d,
0xb114, //14
0xb2a0, //80 //90
0xb317, //AGLVL //17
0xb417,
0xb53e,
0xb62b,
0xb724,
0xb821,
0xb91f,
0xba1e,
0xbb1d,
0xbc1c,
0xbd1b,

0xc01a,
0xc348,
0xc448,

//Page 22 AWB
0x0322,
0x10e2,
0x112e, //2e
0x2041, //01 //69
0x2140,

0x3080, //Cb
0x3180, //Cr
0x3812, //Lock Boundary //13
0x3933,
0x40f3, //f0
0x4133, //32
0x4222,
0x43f3,
0x4488, //
0x4566, //
0x4608, //02

0x803d, //3a //3c
0x8120,
0x8240, //3a

//Cb_7b, Cr_85 CN
0x835a, //RMAX
0x8422, //(0216_kjh20>>23) RMIN
0x8556, //(0216_kjh5c>>5a) BMAX //51
0x8624, //BMIN //20

0x874a,
0x883a,
0x8940, //3e
0x8a34, //32

0x8b00, //OUT TH
0x8d24, //21 //22
0x8e61, //41

0x8f63, //
0x9062, //
0x915e, //
0x925a, //56
0x9350, //4c
0x9442, //3e
0x953b, //37
0x9634, //30
0x972d, //2c
0x982b, //2a
0x9929, //28
0x9a27, //26
0x9b0b, //

///////////////////////////// Page 48	- MIPI		////
0x0348,

0x1005,
0x1100,
0x1200,

0x16c4,
0x1700,
0x1900,
0x1a06,
0x1c02,
0x1d04,
0x1e07,
0x1f04,
0x2000,
0x21b8,
0x2200,
0x2301,

0x3005,
0x3100,
0x3206,
0x3401,
0x3502,
0x3601,
0x3703,
0x3800,
0x394a,
0x3c00,
0x3dfa,
0x3f10,
0x4000,
0x4120,
0x4200,

0x0322,
0x10fb,

0x0320,
0x109c,

0x0300,
0x1194,
0x0170,
};

static const u16 sr200pc20_Preview[]  = {
	
	0x0300, /*Sleep On*/
	0x0131,
	
	0x0320, /*page 20*/
	0x1830, /*for Preview*/
	0x101c, /*AE off 50hz*/
	
	0x0322, /*page 22*/
	0x1069, /*awb off*/
	
	0x0300,
	0x1011,
	
	0x1190,//marc.calandro solve camera preview flip problem
	
	0x2000,
		0x2102, /*modify 20110929	0x04->	0x02*/
	0x2200,
		0x230a, /*modify 20110929	0x14->	0x0a*/
	
	0x4200, /*VBlank*/
	0x4394, /*148*/
	
	/*Page10*/
	0x0310,
	0x6061,
	
	/*Page12*/
	0x0312,
	0x2000,
	0x2100,
	0x905d,
	
	/*only for Preview DPC */
	0xd217,
	0xd50f,
	0xd7ff,
	
	/*Page13*/
	0x0313,
		0x104a, /* Edge Off */
		0x8000, /* For Preview */
	
	/*Page18*/
	0x0318,
	0x1007,
	
	/* PAGE 48 START*/
	0x0348,
	
	/* PLL Setting */
	0x7005,
	0x7130, /*MiPi Pllx2*/
	0x7285,
	0x70a5, /* PLL Enable*/
	0x0348,
	0x0348,
	0x0348,
	0x0348,
	0x7095,  /* CLK_GEN_ENABLE*/
	
	/* MIPI TX Setting */
	0x1100, /* 20111013 0x10 continuous -> 0x00 not Continuous */
	/*	0x17cc,*/ /*MHSHIM*/
	0x101c,
	0x1200,
		0x1430, /*	0x1470,*/ /* 20111013	0x00 -> 	0x30 Clock Delay */
		0x1604, /* 1016 	0x04->	0x05*/
	
	
	0x1900,
	0x1a32,
	0x1b17,
	0x1c0c,
	0x1d0f,
	0x1e06,
	0x1f05,
	0x2000,
	
	0x2301,
	0x241e,
	0x2500,
	0x2600,
	0x2701,
	0x2800,
	0x2a06,
	0x2b40,
	0x2c04,
	0x2db0,
	
		0x3000, /*64	0x480 MiPi OutPut*/
	0x3105,
	
	/*	0x3040, 80	0x600 MiPi OutPut*/
	/*	0x3106,*/
	
	0x320c,
	0x330a,
		0x3402,/*CLK LP -> HS Prepare time 24MHz:	0x02, 48MHz:	0x03*/
	0x3501,
	0x3603,
	0x3707,
	0x3802,
	0x3902,/*drivability 24MHZ:02, 48MHz:03*/
	/*	0x17c4,*//*MHSHIM*/
	/*	0x17c0,*//*MHSHIM*/
	/*	0x1700,*//*MHSHIM*/
	0x5000,
	/* PAGE 48 END*/
	
	0x0320,
		0x109c, /* AE on 50hz */
	
	0x0322,
	0x10e9, /*AWB ON*/
	
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	0x0300,
	
	0x0300, /*Sleep Off*/
	0x0130,
	
	0xff28, /*400ms*/ 

};

static const u16 sr200pc20_stop_stream[]  = {
0xff00,
};

static const u16 sr200pc20_i2c_check[]  = {
0x0300,
0x0100,

0xff0a,

};

static const u16 sr200pc20_Capture[]  = {

0x0300,
0x0131, // b[0] set power sleep by preserving all register values, 0=OFF 1=ON

0x0322, /* Page 22 */
0x1069, /* AWB Off */

0x0300,
0x1000, // Imge size, windowing, Hsync, Vsync

0x2000, // windowing
0x210a, /* modify 20110929	0x0c -> 0x0a */
0x2200,
0x230a, /* modify 20110929	0x14 -> 0x0a */

/* Page10 */
0x0310,
0x3f00, // not defined in data sheet
0x6063, // color saturation

/* Page12 */  // Noise reduction
0x0312,
0x200f,
0x210f,
0x905d,

/* only for Preview DPC Off */
0xd267,
0xd502,
0xd718,

/* Page13 */  // Edge enhancement
0x0313,
0x10cb, /*Edge On*/
0x80fd,

/* PAGE 18 */ // Image scaling
0x0318,
0x1000, /* Scaling Off */

/* PAGE 48 START */
0x0348,

/* PLL Setting */
0x7005,
0x7130, /* MiPi Pllx2 */
0x7281,
0x7085, /* PLL Enable */
0x0348,
0x0348,
0x0348,
0x0348,
0x7095, /* CLK_GEN_ENABLE */

/* MIPI TX Setting */
0x1100, /* 2011101310 continuous -> 0x00 not Continuous */
0x101c,
0x1200,
0x1430, /* 2011101300 -> 0x30 Clock Delay */
0x1604,

0x1900,
0x1a32,
0x1b17,
0x1c0b, 
0x1d0e, 
0x1e08, 
0x1f05, 
0x2000,

0x2301,
0x241e,
0x2500,
0x2600,
0x2701,
0x2800,
0x2a06,
0x2b40,
0x2c04,
0x2db0,

0x3080, /* 1600 x 1200 MiPi OutPut */
0x310c,

/* 0x3040, 80	0x600 MiPi OutPut */
/* 0x3106, */

0x320c,
0x330a,
0x3403, /* CLK LP -> HS Prepare time 24MHz:	0x02, 48MHz: 0x03 */
0x3503,
0x3601,
0x3707,
0x3802,
0x3903, /* drivability 24MHZ:02, 48MHz:03 */

0x5000,
/* PAGE 48 END */

/* Page0 */
0x0300,
0x0300,
0x0300, /* Dummy 750us */
0x0300,
0x0300,
0x0300,
0x0300,
0x0300,
0x0300,
0x0300,
0x0300,
0x0300,

0x0300,
0x0130, /* Sleep Off */

0xff03, /* Increase from 30ms */
/* END of sr200pc20m_capture. */

};

static const u16 sr200pc20_Capture_X_Flip[] = {
0x0300,
0x1191, /*B[0]_horizontal flip funtion(0:off,1:on)*/
};

static const u16 sr200pc20_Capture_Y_Flip[] = {
0x0300,
0x1192, /*B[1]_vertical flip funtion(0:off,1:on)*/
};

static const u16 sr200pc20_brightness_M4[] = {
0x0310,
0x40d0,
};

static const u16 sr200pc20_brightness_M3[] = {
0x0310,
0x40B0,
};

static const u16 sr200pc20_brightness_M2[] = {
0x0310,
0x40A0,
};

static const u16 sr200pc20_brightness_M1[] = {
0x0310,
0x4090,

};

static const u16 sr200pc20_brightness_default[] = {
0x0310,
0x4080,
};

static const u16 sr200pc20_brightness_P1[] = {
0x0310,
0x4010,
};

static const u16 sr200pc20_brightness_P2[] = {
0x0310,
0x4020,
};

static const u16 sr200pc20_brightness_P3[] = {
0x0310,
0x4030,
};

static const u16 sr200pc20_brightness_P4[] = {
0x0310,
0x4050,
};

static const u16 sr200pc20_Effect_Normal[] =
{
0x0310,
0x1103,
0x1230,
0x0313,
0x103b,
0x2002,
};

static const u16 sr200pc20_Effect_Negative[] =
{
0x0310,
0x1103,
0x1238,
0x0313,
0x103b,
0x2002,
};

static const u16 sr200pc20_Effect_Gray[] =
{
0x0310,
0x1103,
0x1233,
0x4480,
0x4580,
0x0313,
0x103b,
0x2002,
};

static const u16 sr200pc20_Effect_Sepia[] =
{
0x0310,
0x1103,
0x1233,
0x4470,
0x4598,
0x0313,
0x103b,
0x2002,
};

static const u16 sr200pc20_Effect_Aqua[] =
{
0x0310,
0x1103,
0x1233,
0x44b0,
0x4540,
0x0313,
0x103b,
0x2002,
};

//WhiteBalance
static const u16 sr200pc20_WB_Auto[] = 
{
0x0322,
0x10e2,
0x112e,
0x8038,
0x8120,
0x8238,
0x835a, //RMAX 5a
0x8422, //RMIN 23
0x8556, //BMAX 5a
0x8624, //BMIN 
};

static const u16 sr200pc20_WB_Daylight[] = 
{
0x0322,
0x107b,
0x1126,
0x8052, 
0x8120, 
0x8230, 
0x8353, 
0x8448, 
0x8535, 
0x862b, 
0x10fb,
0xffff,
};

static const u16 sr200pc20_WB_Cloudy[] = 
{
0x0322,
0x107b,
0x1126,
0x8052,
0x8120,
0x8230,
0x837c, //7f 7d
0x847a, //7d 7d 7f RMIN
0x8521, //1c 1e 1a 21 BMAX
0x861d, //10 1e 
0x10fb,
};

static const u16 sr200pc20_WB_Fluorescent[] = 
{
0x0322,
0x107b,
0x1126,
0x8042,
0x8120,
0x8251,
0x834a, //4c 4e RMAX
0x843a, //40
0x8555, //58
0x8645, //48 4a BMIN
0x10fb,
};

static const u16 sr200pc20_WB_Incandescent[] = 
{
0x0322,
0x107b,
0x1126,
0x8020, 
0x8120, 
0x8257, 
0x8321, 
0x841d, 
0x8559, 
0x8656, 
0x10fb,
0xffff,
};

static const u16 sr200pc20_Auto_fps[] = {
0xff00,
};

static const u16 sr200pc20_15fps[] = {
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190, 
0x4200, //Vblank 20
0x4314, 

0x9003, //BLC_TIME_TH_ON
0x9103, //BLC_TIME_TH_OFF 
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x101c,

0x2a90, 
0x2bf5, 
0x30f8,

0x8300, /*EXP Normal 33.33 fps*/
0x84af, 
0x85c8, 

0xa000, /*EXP Max(100Hz) 33.33 fps*/
0xa1af,
0xa2c8,

0x9100, /*EXP Fix 25.00 fps*/
0x92ea,
0x9360,

0x109c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

static const u16 sr200pc20_20fps[]  = {
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190, 
0x4200, //Vblank 20
0x4314, 

0x9003, //BLC_TIME_TH_ON
0x9103, //BLC_TIME_TH_OFF 
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x101c,

0x2a90, 
0x2bf5, 
0x30f8,

0x8300, /*EXP Normal 33.33 fps*/
0x84af, 
0x85c8, 

0xa000, /*EXP Max(100Hz) 33.33 fps*/
0xa1af,
0xa2c8,

0x9100, /*EXP Fix 25.00 fps*/
0x92ea,
0x9360,

0x109c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

static const u16 sr200pc20_15fps_60Hz[]  = {
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

0x9004, //BLC_TIME_TH_ON
0x9104, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x100c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, //EXP Normal 30.00 fps
0x84c3,
0x8550,

0x8800, /*EXP Max(120Hz) 30.00 fps*/
0x89c3,
0x8a50,

0x9100, /*EXP Fix 24.00 fps*/
0x92f4,
0x9324,

0x108c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

static const u16 sr200pc20_20fps_60Hz[]  = {
0x0300,
0x0171,
0x1194,
0x1488,

0x4000, //Hblank 144
0x4190,
0x4200, //Vblank 20
0x4314,

0x9005, //BLC_TIME_TH_ON
0x9105, //BLC_TIME_TH_OFF
0x9288, //BLC_AG_TH_ON
0x9380, //BLC_AG_TH_OFF

0x0320, //Page 20
0x100c,

0x2a90,
0x2bf5,
0x30f8,

0x8300, //EXP Normal 30.00 fps
0x84c3,
0x8550,

0x8800, /*EXP Max(120Hz) 24.00 fps*/
0x89f4,
0x8a24,

0x9101, //EXP Fix 20.00 fps
0x9224,
0x93f8,

0x108c,
0x0300,
0x0170,

0xff0a,//100ms delay
};

#endif
